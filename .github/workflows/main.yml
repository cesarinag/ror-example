name: Prebuilt repo + Snyk Security Scanning (OS, Code, Docker, IaC)

# Runs 4 Snyk Products (Code, Open Source, Container, IaC)
# Snyk installation via npm
# Node.js version: 18.4
# Outputs the results to the pipeline and in SARIF-format to the security tab

# Prerequisites:
# - Set a SNYK_TOKEN and a SNYK_ORG in the pipelines secrets

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js for installing Snyk 
      uses: actions/setup-node@v2
      with:
        node-version: 18.4

    # Install & prepare Snyk
    - run: npm install --location=global snyk
    
    #  This OPTIONAL step will configure the Snyk CLI to connect to the EU instance of Snyk
    #- run: snyk config set use-base64-encoding=true
    #- run: snyk config set endpoint='https://app.eu.snyk.io/api'
      
    - run: snyk auth ${{ secrets.SNYK_TOKEN }}
    - name: install snyk-to-html
      run: |
        npm install snyk-to-html -g
        mkdir downloads
        #cp -v /home/runner/work/java-goof/java-goof/*.html /home/runner/work/java-goof/java-goof/downloads

    - name: Snyk Open Source Scanning
      run: snyk test --org=${{ secrets.SNYK_ORG }} --all-projects --json | snyk-to-html -o result.html
      continue-on-error: true
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3.1.0
      with:
        name: oss-results
        path: downloads

    - name: Snyk Code Scanning
      run: snyk code test --org=${{ secrets.SNYK_ORG }} --json | snyk-to-html -o result.html
      continue-on-error: true
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3.1.0
      with:
        name: code-results
        path: downloads


    - name: Build the Docker Image
      run: |
          docker login
          docker build -t ror-image . 
          docker tag ror-image cesarinag/ror-image:8.4.22

    - name: Snyk Container Scanning
      run: snyk container test --org=${{ secrets.SNYK_ORG }} --file=Dockerfile --json | snyk-to-html -o result.html cesarinag/ror-image:8.4.22
      continue-on-error: true
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3.1.0
      with:
        name: container-results
        path: downloads

    - name: Snyk Infrastructure-as-Code Scanning
      run: snyk iac test --org=${{ secrets.SNYK_ORG }} --json | snyk-to-html -o result.html
      continue-on-error: true
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3.1.0
      with:
        name: iac-results
        path: downloads
        
